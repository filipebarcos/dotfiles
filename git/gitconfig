[user]
  name = Filipe Costa
  email = filipebarcos@gmail.com

[credential]
  helper = osxkeychain

[web]
	browser = google-chrome

[alias]
  co = checkout
  ci = commit
  st = status
  br = branch
  type = cat-file -t
  dump = cat-file -p
  w = whatchanged
  unpushed = !"PROJ_BRANCH=$(git symbolic-ref HEAD | sed 's|refs/heads/||') && git log origin/$PROJ_BRANCH..HEAD"
  promote = !$ZSH/bin/git-promote
  wtf     = !$ZSH/bin/git-wtf
  rank-contributers = !$ZSH/bin/git-rank-contributers
  count   = !git shortlog -sn
  # the acronym stands for "subtree add"
  sba = "!f() { git subtree add --prefix $2 $1 master --squash; }; f"
  # the acronym stands for "subtree update"
  sbu = "!f() { git subtree pull --prefix $2 $1 master --squash; }; f"
  stsh= stash --keep-index
  staash= stash --include-untracked
  staaash= stash --all
  clean-branches= !"git branch | grep -v master | grep -v main | xargs git branch -D"
  pushf = push --force-with-lease
  pusho = push -u origin HEAD
  pam = !$ZSH/bin/git-pam
  pom = pull origin master
  prom = pom --rebase
  goto = "!f() { TARGET=$(git for-each-ref --count=10 --sort=-committerdate refs/heads/ --format='%(refname:short)' | fzf); git checkout $TARGET; };  f"
  update-commit-graph = !"git show-ref -s | git commit-graph write --stdin-commits"
  remote-fetch = "!rf() { git config --add remote.origin.fetch +refs/heads/$1:refs/remotes/origin/$1; git fetch origin +$1:refs/remotes/origin/$1; }; rf"
  remote-purge = "!rp() { git config --unset remote.origin.fetch \".*$1.*\"; git update-ref -d refs/remotes/origin/$1; }; rp"
  co-pr = !sh -c 'git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1' -
  recentb = "!r() { refbranch=$1 count=$2; git for-each-ref --sort=-committerdate refs/heads --format='%(refname:short)|%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' --color=always --count=${count:-20} | while read line; do branch=$(echo \"$line\" | awk 'BEGIN { FS = \"|\" }; { print $1 }' | tr -d '*'); ahead=$(git rev-list --count \"${refbranch:-origin/master}..${branch}\"); behind=$(git rev-list --count \"${branch}..${refbranch:-origin/master}\"); colorline=$(echo \"$line\" | sed 's/^[^|]*|//'); echo \"$ahead|$behind|$colorline\" | awk -F'|' -vOFS='|' '{$5=substr($5,1,70)}1' ; done | ( echo \"ahead|behind||branch|lastcommit|message|author\\n\" && cat) | column -ts'|';}; r"

[color]
  ui = auto
  pager = true

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[format]
  pretty = format:'%C(red)%h%Creset: %C(cyan)%an%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset'

[core]
  editor = nvim
  pager = delta --dark
  commitGraph = true
	fsmonitor = true

[interactive]
  diffFilter = delta --color-only

[delta]
  syntax-theme = ayu_light
  line-numbers = true

[apply]
  whitespace = nowarn

[mergetool]
  keepBackup = false

[difftool]
  prompt = false

[help]
  autocorrect = 1

[pull]
  ff = only
[push]
  default = simple
[github]
	user = filipebarcos
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[diff]
	algorithm = patience
[rerere]
  enabled = true
[interactive]
  diffFilter = delta --color-only
[init]
  defaultBranch = main
[fetch]
	prune = true
