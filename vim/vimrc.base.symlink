if has('nvim')
  scriptencoding utf-8
  set encoding=utf-8
  set termguicolors
endif

" Disable swap files
set noswapfile
set nobackup
set nowb

set autoindent
set background=dark            " Set backgroung to dark
set backspace=indent,eol,start " Intuitive backspacing
set hlsearch                   " Highlight matches
set hidden                     " Handle multiple buffers better
set incsearch                  " Highlight matches as you type
set laststatus=2               " Show the status line all the time
set colorcolumn=120            " Use mark for 120 chars length
set nowritebackup
set number                     " Set line numbers
set scrolloff=3                " Show 3 lines of context around the cursor
set showcmd                    " Display incomplete commands
set showmatch                  " highlight match when found
set showmode                   " Display the mode you're in
set textwidth=0 nosmartindent tabstop=2 shiftwidth=2 softtabstop=2 expandtab
set title
set visualbell                 " No beeping
set wrap                       " Turn on line wrapping
set cursorline
set ttyfast                    " Blazing fast scroll
set lazyredraw                 " to avoid scrolling problems
set noshowmode                 " Lightline already shows the mode, no need to show again

set ignorecase                 " Case-insensitive searching
set smartcase                  " Case-sensitive IF contains a capital letter

set wildmenu                      " Enhanced command line completion
set wildmode=longest,list:longest " Complete files like shell
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*node_modules/**,*DS_Store*,*.gem,log/**,tmp/**,*.png,*.jpg,*.heic,*.gif

set completeopt=noinsert,menuone,noselect " FIXME

" With this config, I can za and hide indented content
set foldmethod=syntax
set foldlevelstart=99
set foldlevel=99

" Copy to system clipboard
set clipboard=unnamed

" Undo configs
set undodir=~/.vim/undo
set undofile
set undolevels=1000 "maximum number of changes that can be undone
set undoreload=10000 "maximum number lines to save for undo on a buffer reload

" Italics
set t_ZH=[3m
set t_ZR=[23m

" FUNCTIONS AND COMMANDS

" Make Ctags
command! MakeTags !ctags -R --exclude=.git --exclude=node_modules --exclude=test --exclude=log --exclude=vendor .
" Delete specific line number
command! -range -nargs=0 Delete <line1>,<line2>d|norm ``
" Split single line in multiple after comma ,
command! NewLineAfterComma %s/,/,\r/g

" Auto remote trailing whitespace on buffer save
function! <SID>StripTrailingWhitespaces()
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  %s/\s\+$//e
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

" Set up highlight group & retain through colorscheme changes
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
