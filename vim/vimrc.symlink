set nocompatible

call pathogen#infect()
call pathogen#helptags()

syntax on
compiler ruby
colorscheme jellybeans
set t_Co=256

set autoindent

set background=dark            " Set backgroung to dark
set backspace=indent,eol,start " Intuitive backspacing

set complete-=i

set directory=~/tmp            " Defaul dir to swp files

set hlsearch                   " Highlight matches
set hidden                     " Handle multiple buffers better

set incsearch                  " Highlight matches as you type

set laststatus=2               " Show the status line all the time

set nobackup                   " Don't make a backup before overwriting a file
set nowritebackup              " Same as above
set number                     " Set line numbers

set scrolloff=3                " Show 3 lines of context around the cursor
set showcmd                    " Display incomplete commands
set showmatch
set showmode                   " Display the mode you're in

set textwidth=0 nosmartindent tabstop=2 shiftwidth=2 softtabstop=2 expandtab
set title

set visualbell                 " No beeping

set wrap                       " Turn on line wrapping


" Wrap gitcommit file types at the appropriate length
filetype plugin indent on

" other NERDTree configs
map <silent> <LocalLeader>nt :NERDTreeToggle<CR>
map <silent> <LocalLeader>nr :NERDTree<CR>
map <silent> <LocalLeader>nf :NERDTreeFind<CR>

" CtrlP configs
map <silent> <LocalLeader>ff :CtrlP<CR>
map <silent> <LocalLeader>ft :CtrlPTag<CR>
map <silent> <LocalLeader>fb :CtrlPBuffer<CR>
map <silent> <LocalLeader>fr :CtrlPClearAllCache<CR>
let g:ctrlp_custom_ignore = 'tmp\|logs\|vendor/assets\|vendor/bundle\|vendor/plugins\|spec/cassett\|\.git\|cassett\|/.git\|/app/assets/image\|/coverage\|.DS_STORE'

" Tab mappings
nnoremap <silent> <LocalLeader>ee :tabe $MYVIMRC<CR>
nnoremap <silent> <LocalLeader><CR> :tabe<CR>
nnoremap <silent> <LocalLeader>[ :tabp<CR>
nnoremap <silent> <LocalLeader>] :tabn<CR>

" Vimux commands
map <silent> <LocalLeader>vq :VimuxCloseRunner<CR>
map <silent> <LocalLeader>rl :wa<CR> :VimuxRunLastCommand<CR>
map <silent> <LocalLeader>rb :wa<CR> :RunAllRubyTests<CR>
map <silent> <LocalLeader>rc :wa<CR> :RunRubyFocusedContext<CR>
map <silent> <LocalLeader>rf :wa<CR> :RunRubyFocusedTest<CR>

" a fill more shortcuts
nnoremap <silent> <LocalLeader>ss :source $MYVIMRC<CR>
nnoremap <silent> <LocalLeader><Space> :noh<CR>
nnoremap <silent> <LocalLeader>ww :%s/\s\+$//<CR>:let @/=''<CR><C-o>

" Set up highlight group & retain through colorscheme changes
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
map <silent> <LocalLeader>ws :highlight clear ExtraWhitespace<CR>

" Status line
set laststatus=2
set statusline=
set statusline+=%<\                       " cut at start
set statusline+=%2*[%n%H%M%R%W]%*\        " buffer number, and flags
set statusline+=%-40f\                    " relative path
set statusline+=%=                        " seperate between right- and left-aligned
set statusline+=%1*%y%*%*\                " file type
set statusline+=%10(L(%l/%L)%)\           " line
set statusline+=%2(C(%v/125)%)\           " column
set statusline+=%P                        " percentage of file

" Undo configs
set undodir=~/.vim/undo
set undofile
set undolevels=1000 "maximum number of changes that can be undone
set undoreload=10000 "maximum number lines to save for undo on a buffer reload


" FUNCTIONS

function! <SID>StripTrailingWhitespaces()
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  %s/\s\+$//e
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

" Disable Autocomment
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
